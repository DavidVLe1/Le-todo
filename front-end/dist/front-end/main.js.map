{"version":3,"sources":["./src/app/names/names.component.ts","./src/app/names/names.component.html","./src/app/_models/name.model.ts","./src/environments/environment.ts","./src/app/todo-list-component/todo-list-component.component.ts","./src/app/todo-list-component/todo-list-component.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/_services/names.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NamesService} from \"../_services/names.service\";\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport {Name} from \"../_models/name.model\";\n\n@Component({\n  selector: 'app-names',\n  templateUrl: './names.component.html',\n  styleUrls: ['./names.component.css']\n})\nexport class NamesComponent implements OnInit {\n  closeResult = '';\n  public newName;\n  public names;\n  public editName= new Name();\n\n  constructor(\n    private namesService: NamesService,\n    private modalService: NgbModal\n  ) { }\n\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n\n\n  ngOnInit(): void {\n    this.namesService.getAll().subscribe(returnNames => {\n      this.names = returnNames.docs;\n    })\n  }\n\n  saveName(): void {\n    this.namesService.create(this.newName).subscribe( saveName => {\n      this.names.push(saveName);\n    })\n  }\n\n  deleteName(deleteName):void{\n    this.namesService.deleteNameId(deleteName).subscribe(success=>{\n      this.names = this.namesService.removeName(this.names, deleteName);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  newEditName(nameToRemove,nameToReplaceWith):void{\n    this.editName=Object.assign({},nameToReplaceWith);\n    this.modalService.open(nameToRemove).result.then((result)=>{\n      this.saveEditedName();\n    })\n  }\n\n  saveEditedName():void{\n    this.namesService.updateNameId(this.newName).subscribe( saveName => {\n      this.names.push(saveName);\n    })\n  }\n\n\n}\n","<input [(ngModel)]=\"newName\">\n<button (click)=\"saveName()\">Save</button>\n\n\n<h3>Here are your Names!</h3>\n<ul>\n  <div *ngFor=\"let person of names\">\n    <div class=\"row\">\n    <li> {{ person.name }} <button (click)=\"deleteName(person)\" type='button' class = 'btn btn-danger btn-sm delete'>Delete</button>\n      <ng-template #content let-modal>\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\" >Profile update</h4>\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <form>\n            <div class=\"form-group\">\n              <label for=\"editName\">Make your changes.</label>\n              <div class=\"input-group\">\n                <input id=\"editName\" type=\"text\" name=\"Edit Name\" class=\"form-control\" placeholder=\"{{person.name}}\" [(ngModel)]=\"editName.name\">\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"saveEditedName()\">Save</button>\n          <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"modal.close('Close button')\">Close</button>\n        </div>\n      </ng-template>\n\n      <button class=\"btn btn-lg btn-outline-primary\" (click)=\"newEditName(content, person)\">Edit Name</button>\n\n      <hr>\n\n      <pre>{{ closeResult }}</pre>\n    </li>\n    </div>\n  </div>\n</ul>\n\n\n\n\n\n\n","export class Name {\n  name: string;\n\n  constructor(name: string = '') {\n    this.name = name;\n  }\n\n  public sayHi(): string {\n    return 'Hi my name is ' + this.name;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-list-component',\n  templateUrl: './todo-list-component.component.html',\n  styleUrls: ['./todo-list-component.component.css']\n})\nexport class TodoListComponentComponent {\n  numberFour = 4\n  starterPokemon = ['Charmander','Squirtle','Bulbasaur', 'Pikachu', 'Eevee','Tododile', 'Torchic', 'Treeko']\n\n\n\n}\n","<ul>\n  <h2>Here is a list of your starter Pokemon!</h2>\n  <div *ngFor=\"let pokemon of starterPokemon\">\n    <li>{{pokemon}}</li>\n  </div>\n\n</ul>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<nav class=\"navbar navbar-light bg-dark\">\n  <a [routerLink]=\"'names'\" class=\"navbar-brand text-light\" >Names Navbar</a>\n  <a [routerLink]=\"'todo-list-component'\" class=\"navbar-brand text-light\" >Todo Component</a>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NamesComponent } from './names/names.component';\nimport { FormsModule} from \"@angular/forms\";\nimport { HttpClientModule} from \"@angular/common/http\";\nimport {TodoListComponentComponent} from \"./todo-list-component/todo-list-component.component\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NamesComponent,\n    TodoListComponentComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        NgbModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\";\nimport { Observable} from \"rxjs\";\nimport { environment} from \"../../environments/environment\";\nimport {Name} from \"../_models/name.model\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NamesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAll(): Observable<any> {\n    return this.httpClient.get<any>(`${environment.apiUrl}/names`)\n  }\n\n  create( newName ): Observable<Name> {\n    return this.httpClient.post<any>(`${environment.apiUrl}/name`, {name: newName})\n      .pipe(map(newName=> new Name(newName.name)));\n  }\n\n  deleteNameId( name ): Observable<any> {\n    return this.httpClient.delete(`${environment.apiUrl}/name/${name._id}`)\n  }\n\n  removeName( arrayNames, nameToRemove ): any{\n    for (let i = 0; i <= arrayNames.length; i++) {\n      if (arrayNames[i]._id === nameToRemove._id) {\n        arrayNames.splice(i, 1);\n        return arrayNames;\n      }\n    }\n  }\n\n  updateNameId( name ): Observable<any> {\n    return this.httpClient.put(`${environment.apiUrl}/name/${name._id}`, {name: name})\n  }\n\n  updateName(arrayNames, nameToRemove, nameToReplaceWith):Observable<any>{\n    for (let i = 0; i <= arrayNames.length; i++) {\n      if (arrayNames[i]._id === nameToRemove._id) {\n        arrayNames.splice(i, 1,nameToReplaceWith );\n        return arrayNames;\n      }\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NamesComponent} from \"./names/names.component\";\nimport {TodoListComponentComponent} from \"./todo-list-component/todo-list-component.component\";\n\nconst routes: Routes = [\n  {path: 'names', component: NamesComponent},\n  {path: 'todo-list-component', component:TodoListComponentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}